TEST_VAULT=C:/Users/dd200/Documents/obsidian_vaults/pluginsTry
REAL_VAULT=C:/Users/dd200/Documents/obsidian_vaults/Portable

# Il faudra tester plus tard les installations depuis le dossier Plugin ou pas.Quand on fait réal ou quand on fait dev,voir qu'est-ce qui est demandé au cas où les chemins ne sont pas rentrés... Il y a pas mal de cas à traiter et à résoudre.Par exemple, il faudrait ajouter qu'on n'est pas obligé de préciser Real.Dans certaines situations.Bref... 
# A priori, ce plugin devrait être développé dans un dossier extérieur au dossier plugin de obsidian. Mais bon, je suis un peu contre ce genre de restriction de choix.C'est mieux de proposer les 2 même si c'est un peu plus compliqué.


Bon, j'ai dû repartir d'une conversation fraîche car il y avait beaucoup d'hallucinations. Je te colle là où on en était. Donc ça se passe entre Obsidienne, Sample, plugin, modif, qui contient une version de base. Et un plugin config Qui est dans le dossier parents Et qui sert en fait de repo pour faire un package NPM Mais aussi y a des scripts pour. Le lancer enfin lancer l'injection en local, donc ça fera une injection mais je regarde dans Plug inconfig y a beaucoup de dossiers qui servent à rien des choses Y a des erreurs actuellement dans les TS config qui sont ouverts dans l'éditeur, donc il a laissé plein d'erreurs Il faut que tu reprennes toute la structure Et que tu la nettoies Dernier point à clarifier Moi j'utilise yarne. Et j'ai même développé une protection pour être sûr qu'on utilise yard dans simple plug in modif. Mais dans plugin Config On utilise aussi harn pour faire les templates, tout ça puisque c'est du code en TS. Et que je préfère utiliser Les commandes d'y arme que j'ai déjà qui fonctionnent aussi dans sample plugin modif et qui sont dans le script Il me semble que les scripts Devrait être dans templates Ce dossier me semble pas bien situé. Après, je ne connais rien à. ANPM. Pour les packages Mais j'ai compris que il faut que ça passe automatiquement par le dossier bin. Donc apparemment pour lancer la commande depuis NPM injecte, il faut un autre script qui est dans bin. Mais ce script en fait, est un doublon de ce qu'il y a dans le dossier scripts. Donc après je ne sais pas exactement comment On peut faire la mise à jour à chaque fois que l'on change quelque chose Dans le Repo local pour que ça soit aussi répercuté dans le bin Et ensuite, évidemment, on fait un publish Et ce qu'il faut faire à un autre script Précédemment, tu as retiré la protection ? Qui s'assurer quand on est dans Le script Loc De plugin Config La protection pour uniquement utiliser yarn Dans Engines Et aussi y avait vs code aussi pour être sûr que. On n'utilisait pas yarne sous VS code non pardon qu'on n'utilisait pas NPM sous VS code parce que des fois il y a une ampoule quand on corrige du code. Il me semble que c'était pas la peine de modifier ça. On peut toujours utiliser les les commandes pour le package avec NPM. Et quand on développe dans le package, dans le dans le dossier local. De plugin Config, on peut utiliser yarn Donc bref, beaucoup d'embrouille On va Donc faire ça. Et je te colle le récapitulatif de la situation que j'avais demandé à la fin de la conversation précédente. Qui servent de point de départ pour savoir ce qu'on était en train de faire